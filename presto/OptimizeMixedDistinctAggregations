Optimize distinct aggregation on multi column 
https://github.com/prestodb/presto/issues/12024





（1）presto OptimizeMixedDistinctAggregations


 * This optimizer convert query of form:
 *
 *  SELECT a1, a2,..., an, F1(b1), F2(b2), F3(b3), ...., Fm(bm), F(distinct c) FROM Table GROUP BY a1, a2, ..., an
 *
 *  INTO
 *
 *  SELECT a1, a2,..., an, arbitrary(if(group = 0, f1)),...., arbitrary(if(group = 0, fm)), F(if(group = 1, c)) FROM
 *      SELECT a1, a2,..., an, F1(b1) as f1, F2(b2) as f2,...., Fm(bm) as fm, c, group FROM
 *        SELECT a1, a2,..., an, b1, b2, ... ,bn, c FROM Table GROUP BY GROUPING SETS ((a1, a2,..., an, b1, b2, ... ,bn), (a1, a2,..., an, c))
 *      GROUP BY a1, a2,..., an, c, group
 *  GROUP BY a1, a2,..., an


这里其实可以看成两段

SELECT a1, a2,..., an, b1, b2, ... ,bn, c FROM Table GROUP BY GROUPING SETS ((a1, a2,..., an, b1, b2, ... ,bn), (a1, a2,..., an, c))
与下面的是等价的
SELECT a1, a2,..., an, b1, b2, ... ,bn FROM Table GROUP BY GROUPING SETS (a1, a2,..., an, b1, b2, ... ,bn)
union all
SELECT a1, a2,..., an, c FROM Table GROUP BY GROUPING SETS (a1, a2,..., an, c)



presto测试case在TestOptimizeMixedDistinctAggregations里面



（2）下面是hive的

https://issues.apache.org/jira/browse/HIVE-10568

select count(distinct ss_ticket_number) from store_sales;
换成
select count(1) from (select distinct ss_ticket_number from store_sales) a;


https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveExpandDistinctAggregatesRule.java


Converts an aggregate relational expression that contains only count(distinct) to grouping sets with count. For example

select 
  count(distinct department_id), 
  count(distinct gender), 
  count(distinct education_level) 
from employee; 

can be transformed to

select 
  count(case when i=1 and department_id is not null then 1 else null end) as c0, 
  count(case when i=2 and gender is not null then 1 else null end) as c1, 
  count(case when i=4 and education_level is not null then 1 else null end) as c2 
  from (
      select
          grouping__id as i, 
          department_id, 
          gender, 
          education_level 
      from employee
      group by department_id, gender, education_level 
      grouping sets (department_id, gender, education_level)
  )subq;





    // For example,
    //    SELECT deptno, COUNT(DISTINCT sal), SUM(DISTINCT sal)
    //    FROM emp
    //    GROUP BY deptno
    //
    // becomes
    //
    //    SELECT deptno, COUNT(distinct_sal), SUM(distinct_sal)
    //    FROM (
    //      SELECT DISTINCT deptno, sal AS distinct_sal
    //      FROM EMP GROUP BY deptno)
    //    GROUP BY deptno








