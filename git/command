假设本地分支名是branch-1.1.2，按照下面步骤：
1. git checkout -b branch-1.1.2-EHB-408 branch-1.1.2
2. git push -u origin branch-1.1.2-EHB-408:branch-1.1.2-EHB-408


git fetch


git rebase origin/master

合并commit
f6894474d1cc3895ef56aab4372c7a672ffb9ae6是基准head
git rebase -i f6894474d1cc3895ef56aab4372c7a672ffb9ae6
fixup
fixup


git show b6eae44f327315a8429c323b8ecf498c1a2cbcb2


git cherry-pick b97b936cf1751200382cae6832ed2d9f194272a1


git branch -va

$ git checkout -b iss53
这相当于执行下面这两条命令：
$ git branch iss53
$ git checkout iss53
//删除分支
$ git branch -d 0.8.3
 //checkout远程分支
$ git fetch origin
$ git branch -v -a
$ git checkout -b  0.8.3 origin/0.8.3

After the clone, you can list the tags with git tag -l and then checkout a specific tag: git checkout tags/<tag_name>
git checkout tags/<tag_name> -b <tag_name>

$ git remote -v
binlijin-druid https://github.com/binlijin/druid.git (fetch)
binlijin-druid https://github.com/binlijin/druid.git (push)
origin https://github.com/druid-io/druid.git (fetch)
origin https://github.com/druid-io/druid.git (push)

$ git branch optimize-create-inverted-indexes
$ git checkout optimize-create-inverted-indexes
$ git push binlijin-druid

$ git pull origin master


